// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model UserConfirmation {
  id        Int      @id @default(autoincrement())
  userId    Int      @map(name: "user_id")
  accepted  Boolean  @map(name: "accepted")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "user_confirmation")
}

model Post {
  id          Int       @id @default(autoincrement())
  userId      Int       @map(name: "user_id")
  title       String    @map(name: "title")
  content     String    @map(name: "content")
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @default(now()) @map(name: "updated_at")
  publishedAt DateTime? @map(name: "published_at")

  @@map(name: "posts")
}

model Comment {
  id          Int       @id @default(autoincrement())
  userId      Int       @map(name: "user_id")
  postId      Int       @map(name: "post_id")
  content     String    @map(name: "content")
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @default(now()) @map(name: "updated_at")
  publishedAt DateTime? @map(name: "published_at")

  @@map(name: "comments")
}

model Event {
  id          Int      @id @default(autoincrement())
  location    String   @map(name: "location")
  title       String   @map(name: "title")
  description String   @map(name: "description")
  start       DateTime @map(name: "start")
  end         DateTime @map(name: "end")
  latitude    Float?   @map(name: "latitude")
  longitude   Float?   @map(name: "longitude")
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")
}

model Suggestion {
  id        Int      @id @default(autoincrement())
  userId    Int      @map(name: "user_id")
  title     String   @map(name: "title")
  content   String   @map(name: "content")
  upvotes   Int      @map(name: "upvotes")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "suggestions")
}

model UserSuggestion {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  suggestionId Int      @map(name: "suggestion_id")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "user_suggestions")
}

model BugReport {
  id        Int      @id @default(autoincrement())
  userId    Int      @map(name: "user_id")
  content   String   @map(name: "content")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "bug_reports")
}

model UserNotification {
  id        Int      @id @default(autoincrement())
  userId    Int      @map(name: "user_id")
  content   String   @map(name: "content")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "user_notifications")
}

model UserNotificationRead {
  id             Int      @id @default(autoincrement())
  userId         Int      @map(name: "user_id")
  notificationId Int      @map(name: "notification_id")
  createdAt      DateTime @default(now()) @map(name: "created_at")
  updatedAt      DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "user_notification_reads")
}

model AllowNotifications {
  id        Int      @id @default(autoincrement())
  userId    Int      @map(name: "user_id")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "allow_notifications")
}
